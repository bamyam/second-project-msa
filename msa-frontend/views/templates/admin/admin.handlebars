<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    {{> head_css}}
    <!-- 구글 아이콘과 폰트 생략 -->
    <title>SJ COMPANY 방문객 서비스(관리자)</title>
    <style>
        main {
            width: 100%;
            height: 700px;
        }
        .request {
            border: 1px solid blue;
            margin: 70px auto;
            width: 1300px;
            background-color: white;
            box-shadow: 0 15px 30px 0 black;
            text-align: center;
            font-size: 15px;
        }

        form {
            margin-bottom: 100px;
        }

        td {
            padding-top : 3px;
            padding-bottom: 3px;
        }

        textarea { width: 100%; height: 80px}

        /* 버튼이 안 눌러지는 문제 해결 */
        li > a {
            z-index: 9;
        }

        /* 모달 */
        #acceptModal {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            padding: 30px;
            background-color: white;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            z-index: 1;
            border-radius: 15px;
        }

        #rejectModal {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            padding: 30px;
            background-color: white;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            z-index: 1;
            border-radius: 15px;
        }

        /* 어두운 배경 생성 */
        #overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            z-index: 0;
        }

        #acceptModal > div > p, #rejectModal > div > p {
            display: inline-block;
            font-size: 20px;
        }

        {#로딩#}
        .loader {
            display: none;
            border : 12px solid rgba(0, 0, 0, 0.1);
            border-left-color: #1a73e8;
            border-radius: 50%;
            width: 100px;
            height: 100px;
            animation: spin 1s linear infinite;
            position: fixed;
            top: 50%;
            left: 47%;
            z-index: 11;

        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

    </style>
</head>
<body style="background-size: cover; background-image: url('https://images.unsplash.com/photo-1486406146926-c627a92ad1ab?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90oy1wYWdlfHx8fGVufDB8fHx8fA%3D%3D')">
<div class="container">
    {{> header}}
    <main>
        <div class="request">
            <h2 style="margin-top: 15px">방문자 관리 페이지</h2>
            <form name="dataForm">
                <table class="table-bordered container mt-4" >
                     <tr>
                        <th>NO</th>
                        <th>접수시간</th>
                        <th>회사이름</th>
                        <th>부서명</th>
                        <th>직급</th>
                        <th>이름</th>
                        <th>전화번호</th>
                        <th>담당자(보안등급)</th>
                        <th>방문목적</th>
                        <th>방문장소(보안등급)</th>
                        <th>방문날짜</th>
                        <th>접수상태</th>
                        <th>
                            승인/거절
                        </th>
                    </tr>
{{!--                     {% for i in info %} --}}
{{!--                     <tr> --}}
{{!--                         <td>{{ i.id }}</td> --}}
{{!--                         <td>{{ i.regdate }}</td> --}}
{{!--                         <td>{{ i.company_name }}</td> --}}
{{!--                         <td>{{ i.department_name }}</td> --}}
{{!--                         <td>{{ i.job_position }}</td> --}}
{{!--                         <td>{{ i.name }}</td> --}}
{{!--                         <td>{{ i.phone_number }}</td> --}}
{{!--                         <td>{{ i.department_name_1 }} {{ i.job_position_1 }} {{ i.name_1 }}({{ i.security_grade }})</td> --}}
{{!--                         <td>{{ i.purpose }}</td> --}}
{{!--                         <td>{{ i.location }}({{ i.security_grade_1 }})</td> --}}
{{!--                         <td>{{ i.visit_date }}</td> --}}
{{!--                         {% if i.status == "N" %} --}}
{{!--                         <td>{{ i.status }}(접수 중)</td> --}}
{{!--                         <td > --}}
{{!--                             <button onclick="openModal1(this)" type="button" class="btn btn-primary btn-sm">승인</button> --}}
{{!--                             <button onclick="openModal2(this)" type="button" class="btn btn-danger btn-sm">거절</button> --}}
{{!--                         </td> --}}
{{!--                         {% elif i.status == "Y" %} --}}
{{!--                         <td>{{ i.status }}(승인)</td> --}}
{{!--                         <td style="padding-top : 5px; padding-bottom: 5px;">승인완료</td> --}}
{{!--                         {% elif i.status == "R" %} --}}
{{!--                         <td>{{ i.status }}(거절)</td> --}}
{{!--                         <td style="padding-top : 5px; padding-bottom: 5px;">거절완료</td> --}}
{{!--                         {% endif %} --}}
{{!--                     </tr> --}}
{{!--                     {% endfor %} --}}
                </table>
            </form>
            <ul class="pagination justify-content-center mt-4">
            </ul>
        </div>


        <div id="acceptModal" style="z-index: 10">
            <div style="display: none" id="number">01</div>
            <div>
                <p id="accept_name">OOO</p><p>의 출입을 허가하시겠습니까?</p>
            </div>
            <div>
                <table class="table table-borderd">
                    <tr>
                        <th colspan="4">출입자</th>
                    </tr>
                    <tr>
                        <th>회사</th>
                        <th>부서</th>
                        <th>직급</th>
                        <th>이름</th>
                    </tr>
                    <tr>
                        <td id="company">00</td>
                        <td id="visit_depart">00</td>
                        <td id="visit_posit">00</td>
                        <td id="visit_name">00</td>
                    </tr>
                </table>
                <table class="table table-borderd">
                    <tr>
                        <th colspan="4">담당자</th>
                    </tr>
                    <tr>
                        <th >부서</th>
                        <th >직급</th>
                        <th>이름</th>
                        <th>보안등급</th>
                    </tr>
                    <tr>
                        <td id="emp_depart">00</td>
                        <td id="emp_posit">00</td>
                        <td id="emp_name">00</td>
                        <td id="emp_sg">00</td>
                    </tr>
                    <tr>
                        <th colspan="2">방문목적</th>
                        <th>방문장소</th>
                        <th>보안등급</th>
                    </tr>
                    <tr>
                        <td colspan="2" id="purpose">00</td>
                        <td id="location">00</td>
                        <td id="loc_sg">0</td>
                    </tr>
                </table>
            </div>
            <div style="text-align: right">
                <button onclick="closeModal1()" type="button" class="btn btn-light">이전</button>
                <button type="button" id="accept_btn" class="btn btn-primary">승인</button>
            </div>
        </div>

        <div id="rejectModal" style="z-index: 10">
            <div style="display: none" id="number_r">01</div>
            <div>
                <p id="reject_name">OOO</p><p>의 출입을 거부하시겠습니까?</p>
            </div>
            <div>
                <table class="table table-borderd">
                    <tr>
                        <th colspan="4">출입자</th>
                    </tr>
                    <tr>
                        <th>회사</th>
                        <th>부서</th>
                        <th>직급</th>
                        <th>이름</th>
                    </tr>
                    <tr>
                        <td id="company_r">00</td>
                        <td id="visit_depart_r">00</td>
                        <td id="visit_posit_r">00</td>
                        <td id="visit_name_r">00</td>
                    </tr>
                    <tr>
                        <th colspan="2">방문목적</th>
                        <th>방문장소</th>
                        <th>보안등급</th>
                    </tr>
                    <tr>
                        <td colspan="2" id="purpose_r">00</td>
                        <td id="location_r">00</td>
                        <td id="loc_sg_r">00</td>
                    </tr>
                </table>
                <div>
                    <label for="reason"><strong>거부사유</strong></label>
                </div>
                <textarea id="reason" class="textarea"></textarea>

            </div>
            <div style="text-align: right; margin-top: 7px">
                <button onclick="closeModal2()" type="button" class="btn btn-light">이전</button>
                <button type="button" id="reject_btn" class="btn btn-danger">거절</button>
            </div>
        </div>
        <div id="overlay" style="display: none;"></div>
        <div class="loader"></div>
    </main>

<script>
let openModal1 = (button) => {

    let row = button.parentNode.parentNode;

    document.getElementById("number").innerText = row.cells[0].innerText;
    document.getElementById("accept_name").innerText = row.cells[5].innerText;
    document.getElementById("company").innerText = row.cells[2].innerText;
    document.getElementById("visit_depart").innerText = row.cells[3].innerText;
    document.getElementById("visit_posit").innerText = row.cells[4].innerText;
    document.getElementById("visit_name").innerText = row.cells[5].innerText;
    let data1 = row.cells[7].innerText;
    let parts = data1.split(' ');
    let depart = parts[0];
    let position = parts[1];
    let name = parts[2].slice(0, -3);
    let sg = parts[2].slice(-2, -1);
    document.getElementById("emp_depart").innerText = depart;
    document.getElementById("emp_posit").innerText = position;
    document.getElementById("emp_name").innerText = name;
    document.getElementById("emp_sg").innerText = sg;

    document.getElementById("purpose").innerText = row.cells[8].innerText;
    let data2 = row.cells[9].innerText;
    let loc = data2.slice(0, -3);
    let loc_sg = data2.slice(-2, -1);
    document.getElementById("location").innerText = loc;
    document.getElementById("loc_sg").innerText = loc_sg;

    document.getElementById("acceptModal").style.display = "block";
    document.getElementById("overlay").style.display = "block";
}

let openModal2 = (button) => {
    let row = button.parentNode.parentNode;

    document.getElementById("number_r").innerText = row.cells[0].innerText;
    document.getElementById("reject_name").innerText = row.cells[5].innerText;
    document.getElementById("company_r").innerText = row.cells[2].innerText;
    document.getElementById("visit_depart_r").innerText = row.cells[3].innerText;
    document.getElementById("visit_posit_r").innerText = row.cells[4].innerText;
    document.getElementById("visit_name_r").innerText = row.cells[5].innerText;

    document.getElementById("purpose_r").innerText = row.cells[8].innerText;
    let data2 = row.cells[9].innerText;
    let loc = data2.slice(0, -3);
    let loc_sg = data2.slice(-2, -1);
    document.getElementById("location_r").innerText = loc;
    document.getElementById("loc_sg_r").innerText = loc_sg;

    document.getElementById("rejectModal").style.display = "block";
    document.getElementById("overlay").style.display = "block";
}

let closeModal1 = () => {
    document.getElementById("acceptModal").style.display = "none";
    document.getElementById("overlay").style.display = "none";
}

let closeModal2 = () => {
    document.getElementById("rejectModal").style.display = "none";
    document.getElementById("overlay").style.display = "none";
}
</script>

<script>
let accept_btn = document.querySelector('#accept_btn');

accept_btn.addEventListener('click', () => {
    document.querySelector(".loader").style.display = "block";
    let jsondata = {};
    jsondata['number'] = document.getElementById("number").innerText;

    fetch('http://127.0.0.1:8000/admin/accept', {
        method: 'POST',
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(jsondata),
        redirect: 'follow'
    })
    .then((res) => {
        if (res.ok){
            return res.json(); // JSON 데이터를 파싱하여 반환
        } else {
            return res.json().then((errorData) => {
                throw new Error(errorData.detail);
            });
        }
    })
    .then((data) => {
        const resUrl = data.res_url;
        if (resUrl === '/admin/1'){
            alert("승인 되었습니다.");
            location.href = '/admin'
        } else {
            alert("승인 처리 중 에러가 발생했습니다.");
            location.reload();
        }
    })
    .catch((err) => {
        console.log(err);
        alert(err.message); // 에러 메시지를 표시
        location.reload();
    });
});
</script>
<script>
let reject_btn = document.querySelector('#reject_btn');

reject_btn.addEventListener('click', () => {
    document.querySelector(".loader").style.display = "block";
    let jsondata = {};
    jsondata['number'] = document.getElementById("number_r").innerText;
    jsondata['reason'] = document.getElementById("reason").value;

    fetch('http://127.0.0.1:8000/admin/reject', {
        method: 'POST',
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(jsondata),
        redirect: 'follow'
    })
    .then((res) => {
        if (res.ok){
            return res.json(); // JSON 데이터를 파싱하여 반환
        } else {
            return res.json().then((errorData) => {
                throw new Error(errorData.detail);
            });
        }
    })
    .then((data) => {
        const resUrl = data.res_url;
        if (resUrl === '/admin/1'){
            alert("거절 되었습니다.");
            location.href = '/admin'
        } else {
            alert("거절 처리 중 에러가 발생했습니다.");
            location.reload();
        }
    })
    .catch((err) => {
        console.log(err);
        alert(err.message); // 에러 메시지를 표시
        location.reload();
    });


})
</script>
<script>
window.addEventListener('load', async () => {
        try {
            const result = await getPageResult();
            if (result) {  // 결과가 성공적으로 반환되었을 경우에만 display 함수 호출
                displayPageResult(result);
            }
        } catch (e) {
            console.error(e);  // 콘솔에 오류 출력
            alert(e.message);  // 오류 메시지로 설정된 알림 보여주기
        }
    })

    async function getPageResult(cpg) {

        try {
            const res = await fetch(`http://127.0.0.1:8000/admin/${cpg || 1}`, {
                method: 'GET', // HTTP 메소드를 GET으로 지정
                headers: {
                    'Accept': 'application/json' // 서버 응답을 JSON으로 받기를 기대
                }
            });

            if (res.ok) {
                return await res.json(); // 서버로부터 JSON 응답을 기다리고 파싱
            } else {
                throw new Error('데이터 조회 실패!!!'); // 오류 발생 시 예외 처리
            }

        } catch (error) {
            console.error('Error:', error); // 콘솔에 오류 출력
            throw new Error('네트워크 연결 오류로 인해 조회 실패'); // 네트워크 오류에 대한 새로운 오류 메시지를 설정하고 던지기
        }
    }

    const displayPageResult = (result) => {
        const tableBody = document.querySelector('.table-bordered tbody');
        const tableHeader = `
            <tr>
                <th>NO</th>
                <th>접수시간</th>
                <th>회사이름</th>
                <th>부서명</th>
                <th>직급</th>
                <th>이름</th>
                <th>전화번호</th>
                <th>담당자(보안등급)</th>
                <th>방문목적</th>
                <th>방문장소(보안등급)</th>
                <th>방문날짜</th>
                <th>접수상태</th>
                <th>승인/거절</th>
            </tr>
        `;
        tableBody.innerHTML = tableHeader; // 기존 내용 초기화

        allpage = 0;
        stpg = 0;
        cpg = 0;

        result.forEach((item) => {
            const tr = document.createElement('tr');
            allpage = item.allpage;
            stpg = item.stpg;
            cpg = item.cpg;

            tr.innerHTML = `
                <td>${item.id}</td>
                <td>${item.regdate.replace('T', ' ')}</td>
                <td>${item.company_name}</td>
                <td>${item.department_name}</td>
                <td>${item.job_position}</td>
                <td>${item.name}</td>
                <td>${item.phone_number}</td>
                <td>${item.department_name_1} ${item.job_position_1} ${item.name_1} (${item.security_grade})</td>
                <td>${item.purpose}</td>
                <td>${item.location} (${item.security_grade_1})</td>
                <td>${item.visit_date}</td>
            `;

            const tdStatus = document.createElement('td');
            const tdAction = document.createElement('td');

            if (item.status === 'N') {
                tdStatus.textContent = `${item.status}(접수 중)`;

                const approveBtn = document.createElement('button');
                approveBtn.textContent = '승인';
                approveBtn.type = 'button';
                approveBtn.classList.add('btn', 'btn-primary', 'btn-sm');
                approveBtn.onclick = () => openModal1(approveBtn);

                const rejectBtn = document.createElement('button');
                rejectBtn.textContent = '거절';
                rejectBtn.type = 'button';
                rejectBtn.classList.add('btn', 'btn-danger', 'btn-sm');
                rejectBtn.onclick = () => openModal2(rejectBtn);

                tdAction.appendChild(approveBtn);
                tdAction.appendChild(rejectBtn);
            } else if (item.status === 'Y') {
                tdStatus.textContent = `${item.status}(승인)`;
                tdAction.textContent = '승인완료';
                tdAction.style.paddingTop = '5px';
                tdAction.style.paddingBottom = '5px';
            } else if (item.status === 'R') {
                tdStatus.textContent = `${item.status}(거절)`;
                tdAction.textContent = '거절완료';
                tdAction.style.paddingTop = '5px';
                tdAction.style.paddingBottom = '5px';
            }

            tr.appendChild(tdStatus);
            tr.appendChild(tdAction);

            tableBody.appendChild(tr);
        });

        const pagination = document.querySelector('.pagination');
        pagination.innerHTML = ''; // 이전 페이지네이션 링크 삭제

        const prevLink = document.createElement('li');
        prevLink.classList.add('page-item');
        if (cpg === 1) {
            prevLink.classList.add('disabled');
        }
        prevLink.innerHTML = `<a class="page-link" href="#">이전</a>`;
        pagination.appendChild(prevLink);

        for (let idx = stpg; idx <= Math.min(stpg + 10, allpage); idx++) {
            const pageLink = document.createElement('li');
            pageLink.classList.add('page-item');
            if (cpg === idx) {
                pageLink.classList.add('active');
            }
            pageLink.innerHTML = `<a class="page-link" href="javascript:getPageResult(${idx})">${idx}</a>`;
            pagination.appendChild(pageLink);
        }

        const nextLink = document.createElement('li');
        nextLink.classList.add('page-item');
        if (cpg === allpage) {
            nextLink.classList.add('disabled');
        }
        nextLink.innerHTML = `<a class="page-link" href="javascript:getPageResult(${cpg + 1})">다음</a>`;
        pagination.appendChild(nextLink);
    };

</script>

{{> footer}}
</div>

</body>
</html>
